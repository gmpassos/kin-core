// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  enum TransactionResultCode
//  {
//      txSUCCESS = 0, // all operations succeeded
//
//      txFAILED = -1, // one of the operations failed (none were applied)
//
//      txTOO_EARLY = -2,         // ledger closeTime before minTime
//      txTOO_LATE = -3,          // ledger closeTime after maxTime
//      txMISSING_OPERATION = -4, // no operation was specified
//      txBAD_SEQ = -5,           // sequence number does not match source account
//
//      txBAD_AUTH = -6,             // too few valid signatures / wrong network
//      txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve
//      txNO_ACCOUNT = -8,           // source account not found
//      txINSUFFICIENT_FEE = -9,     // fee is too small
//      txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction
//      txINTERNAL_ERROR = -11       // an unknown error occured
//  };
//  ===========================================================================
enum class TransactionResultCode(val value: Int) {
    txSUCCESS(0),
    txFAILED(-1),
    txTOO_EARLY(-2),
    txTOO_LATE(-3),
    txMISSING_OPERATION(-4),
    txBAD_SEQ(-5),
    txBAD_AUTH(-6),
    txINSUFFICIENT_BALANCE(-7),
    txNO_ACCOUNT(-8),
    txINSUFFICIENT_FEE(-9),
    txBAD_AUTH_EXTRA(-10),
    txINTERNAL_ERROR(-11);

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): TransactionResultCode {
            val value = stream.readInt()
            return when (value) {
                0 -> txSUCCESS
                -1 -> txFAILED
                -2 -> txTOO_EARLY
                -3 -> txTOO_LATE
                -4 -> txMISSING_OPERATION
                -5 -> txBAD_SEQ
                -6 -> txBAD_AUTH
                -7 -> txINSUFFICIENT_BALANCE
                -8 -> txNO_ACCOUNT
                -9 -> txINSUFFICIENT_FEE
                -10 -> txBAD_AUTH_EXTRA
                -11 -> txINTERNAL_ERROR
                else -> throw RuntimeException("Unknown enum value: $value")
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, value: TransactionResultCode) {
            stream.writeInt(value.value)
        }
    }

}
