// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct CreatePassiveOfferOp
//  {
//      Asset selling; // A
//      Asset buying;  // B
//      int64 amount;  // amount taker gets. if set to 0, clearStorage the offer
//      Price price;   // cost of A in terms of B
//  };
//  ===========================================================================
class CreatePassiveOfferOp {
    var selling: Asset? = null
    var buying: Asset? = null
    var amount: Int64? = null
    var price: Price? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedCreatePassiveOfferOp: CreatePassiveOfferOp
        ) {
            Asset.encode(stream, encodedCreatePassiveOfferOp.selling!!)
            Asset.encode(stream, encodedCreatePassiveOfferOp.buying!!)
            Int64.encode(stream, encodedCreatePassiveOfferOp.amount!!)
            Price.encode(stream, encodedCreatePassiveOfferOp.price!!)
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): CreatePassiveOfferOp {
            val decodedCreatePassiveOfferOp = CreatePassiveOfferOp()
            decodedCreatePassiveOfferOp.selling = Asset.decode(stream)
            decodedCreatePassiveOfferOp.buying = Asset.decode(stream)
            decodedCreatePassiveOfferOp.amount = Int64.decode(stream)
            decodedCreatePassiveOfferOp.price = Price.decode(stream)
            return decodedCreatePassiveOfferOp
        }
    }
}
