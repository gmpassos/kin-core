// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  typedef opaque DataValue<64>;
//  ===========================================================================
class DataValue {
    var dataValue: ByteArray? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, encodedDataValue: DataValue) {
            val DataValuesize = encodedDataValue.dataValue!!.size
            stream.writeInt(DataValuesize)
            stream.write(encodedDataValue.dataValue!!, 0, DataValuesize)
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): DataValue {
            val decodedDataValue = DataValue()
            val DataValuesize = stream.readInt()
            decodedDataValue.dataValue = ByteArray(DataValuesize)
            stream.read(decodedDataValue.dataValue!!, 0, DataValuesize)
            return decodedDataValue
        }
    }
}
