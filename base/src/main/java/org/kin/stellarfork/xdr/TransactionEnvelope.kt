// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct TransactionEnvelope
//  {
//      Transaction tx;
//      /* Each decorated signature is a signature over the SHA256 hash of
//       * a TransactionSignaturePayload */
//      DecoratedSignature
//      signatures<20>;
//  };
//  ===========================================================================
class TransactionEnvelope {
    var tx: Transaction? = null
    var signatures: Array<DecoratedSignature?> = arrayOfNulls(0)

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedTransactionEnvelope: TransactionEnvelope
        ) {
            Transaction.encode(stream, encodedTransactionEnvelope.tx!!)
            val signaturessize = encodedTransactionEnvelope.signatures.size
            stream.writeInt(signaturessize)
            for (i in 0 until signaturessize) {
                DecoratedSignature.encode(stream, encodedTransactionEnvelope.signatures[i]!!)
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): TransactionEnvelope {
            val decodedTransactionEnvelope = TransactionEnvelope()
            decodedTransactionEnvelope.tx = Transaction.decode(stream)
            val signaturessize = stream.readInt()
            decodedTransactionEnvelope.signatures = arrayOfNulls(signaturessize)
            for (i in 0 until signaturessize) {
                decodedTransactionEnvelope.signatures[i] = DecoratedSignature.decode(stream)
            }
            return decodedTransactionEnvelope
        }
    }
}
