// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  enum ManageDataResultCode
//  {
//      // codes considered as "success" for the operation
//      MANAGE_DATA_SUCCESS = 0,
//      // codes considered as "failure" for the operation
//      MANAGE_DATA_NOT_SUPPORTED_YET = -1, // The network hasn't moved to this protocol change yet
//      MANAGE_DATA_NAME_NOT_FOUND = -2,    // Trying to remove a Data Entry that isn't there
//      MANAGE_DATA_LOW_RESERVE = -3,       // not enough funds to create a new Data Entry
//      MANAGE_DATA_INVALID_NAME = -4       // Name not a valid string
//  };
//  ===========================================================================
enum class ManageDataResultCode(val value: Int) {
    MANAGE_DATA_SUCCESS(0),
    MANAGE_DATA_NOT_SUPPORTED_YET(-1),
    MANAGE_DATA_NAME_NOT_FOUND(-2),
    MANAGE_DATA_LOW_RESERVE(-3),
    MANAGE_DATA_INVALID_NAME(-4);

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): ManageDataResultCode {
            val value = stream.readInt()
            return when (value) {
                0 -> MANAGE_DATA_SUCCESS
                -1 -> MANAGE_DATA_NOT_SUPPORTED_YET
                -2 -> MANAGE_DATA_NAME_NOT_FOUND
                -3 -> MANAGE_DATA_LOW_RESERVE
                -4 -> MANAGE_DATA_INVALID_NAME
                else -> throw RuntimeException("Unknown enum value: $value")
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, value: ManageDataResultCode) {
            stream.writeInt(value.value)
        }
    }

}
