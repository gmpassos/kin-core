// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct SCPNomination
//  {
//      Hash quorumSetHash; // D
//      Value votes<>;      // X
//      Value accepted<>;   // Y
//  };
//  ===========================================================================
class SCPNomination {
    var quorumSetHash: Hash? = null
    var votes: Array<Value?> = arrayOfNulls(0)
    var accepted: Array<Value?> = arrayOfNulls(0)

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, encodedSCPNomination: SCPNomination) {
            Hash.encode(stream, encodedSCPNomination.quorumSetHash!!)
            val votessize = encodedSCPNomination.votes.size
            stream.writeInt(votessize)
            for (i in 0 until votessize) {
                Value.encode(stream, encodedSCPNomination.votes[i]!!)
            }
            val acceptedsize = encodedSCPNomination.accepted.size
            stream.writeInt(acceptedsize)
            for (i in 0 until acceptedsize) {
                Value.encode(stream, encodedSCPNomination.accepted[i]!!)
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): SCPNomination {
            val decodedSCPNomination = SCPNomination()
            decodedSCPNomination.quorumSetHash = Hash.decode(stream)
            val votessize = stream.readInt()
            decodedSCPNomination.votes = arrayOfNulls(votessize)
            for (i in 0 until votessize) {
                decodedSCPNomination.votes[i] = Value.decode(stream)
            }
            val acceptedsize = stream.readInt()
            decodedSCPNomination.accepted =
                arrayOfNulls(acceptedsize)
            for (i in 0 until acceptedsize) {
                decodedSCPNomination.accepted[i] = Value.decode(stream)
            }
            return decodedSCPNomination
        }
    }
}
