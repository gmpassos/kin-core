// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  union Memo switch (MemoType type)
//  {
//  case MEMO_NONE:
//      void;
//  case MEMO_TEXT:
//      string text<28>;
//  case MEMO_ID:
//      uint64 id;
//  case MEMO_HASH:
//      Hash hash; // the hash of what to pull from the content server
//  case MEMO_RETURN:
//      Hash retHash; // the hash of the tx you are rejecting
//  };
//  ===========================================================================
class Memo {
    var discriminant: MemoType? = null
    var text: String? = null
    var id: Uint64? = null
    var hash: Hash? = null
    var retHash: Hash? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedMemo: Memo
        ) {
            stream.writeInt(encodedMemo.discriminant!!.value)
            when (encodedMemo.discriminant) {
                MemoType.MEMO_NONE -> {
                }
                MemoType.MEMO_TEXT -> stream.writeString(encodedMemo.text!!)
                MemoType.MEMO_ID -> Uint64.encode(stream, encodedMemo.id!!)
                MemoType.MEMO_HASH -> Hash.encode(stream, encodedMemo.hash!!)
                MemoType.MEMO_RETURN -> Hash.encode(
                    stream,
                    encodedMemo.retHash!!
                )
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): Memo {
            val decodedMemo = Memo()
            val discriminant = MemoType.decode(stream)
            decodedMemo.discriminant = discriminant
            when (decodedMemo.discriminant) {
                MemoType.MEMO_NONE -> {
                }
                MemoType.MEMO_TEXT -> decodedMemo.text = stream.readString()
                MemoType.MEMO_ID -> decodedMemo.id = Uint64.decode(stream)
                MemoType.MEMO_HASH -> decodedMemo.hash = Hash.decode(stream)
                MemoType.MEMO_RETURN -> decodedMemo.retHash =
                    Hash.decode(stream)
            }
            return decodedMemo
        }
    }
}
