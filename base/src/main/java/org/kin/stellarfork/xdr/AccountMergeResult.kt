// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  union AccountMergeResult switch (AccountMergeResultCode code)
//  {
//  case ACCOUNT_MERGE_SUCCESS:
//      int64 sourceAccountBalance; // how much got transfered from source account
//  default:
//      void;
//  };
//  ===========================================================================
class AccountMergeResult {
    var discriminant: AccountMergeResultCode? = null
    var sourceAccountBalance: Int64? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedAccountMergeResult: AccountMergeResult
        ) {
            stream.writeInt(encodedAccountMergeResult.discriminant!!.value)
            when (encodedAccountMergeResult.discriminant) {
                AccountMergeResultCode.ACCOUNT_MERGE_SUCCESS -> Int64.encode(
                    stream,
                    encodedAccountMergeResult.sourceAccountBalance!!
                )
                else -> {
                }
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): AccountMergeResult {
            val decodedAccountMergeResult = AccountMergeResult()
            val discriminant = AccountMergeResultCode.decode(stream)
            decodedAccountMergeResult.discriminant = discriminant
            when (decodedAccountMergeResult.discriminant) {
                AccountMergeResultCode.ACCOUNT_MERGE_SUCCESS -> decodedAccountMergeResult.sourceAccountBalance =
                    Int64.decode(stream)
                else -> {
                }
            }
            return decodedAccountMergeResult
        }
    }
}
