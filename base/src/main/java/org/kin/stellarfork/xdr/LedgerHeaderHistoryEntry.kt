// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct LedgerHeaderHistoryEntry
//  {
//      Hash hash;
//      LedgerHeader header;
//
//      // reserved for future use
//      union switch (int v)
//      {
//      case 0:
//          void;
//      }
//      ext;
//  };
//  ===========================================================================
class LedgerHeaderHistoryEntry {
    var hash: Hash? = null
    var header: LedgerHeader? = null
    var ext: LedgerHeaderHistoryEntryExt? = null

    class LedgerHeaderHistoryEntryExt {
        var discriminant: Int? = null

        companion object {
            @JvmStatic
            @Throws(IOException::class)
            fun encode(
                stream: XdrDataOutputStream,
                encodedLedgerHeaderHistoryEntryExt: LedgerHeaderHistoryEntryExt?
            ) {
                stream.writeInt(encodedLedgerHeaderHistoryEntryExt!!.discriminant!!.toInt())
                when (encodedLedgerHeaderHistoryEntryExt.discriminant) {
                    0 -> {
                    }
                }
            }

            @JvmStatic
            @Throws(IOException::class)
            fun decode(stream: XdrDataInputStream): LedgerHeaderHistoryEntryExt {
                val decodedLedgerHeaderHistoryEntryExt =
                    LedgerHeaderHistoryEntryExt()
                val discriminant = stream.readInt()
                decodedLedgerHeaderHistoryEntryExt.discriminant = discriminant
                when (decodedLedgerHeaderHistoryEntryExt.discriminant) {
                    0 -> {
                    }
                }
                return decodedLedgerHeaderHistoryEntryExt
            }
        }
    }

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedLedgerHeaderHistoryEntry: LedgerHeaderHistoryEntry
        ) {
            Hash.encode(stream, encodedLedgerHeaderHistoryEntry.hash!!)
            LedgerHeader.encode(stream, encodedLedgerHeaderHistoryEntry.header!!)
            LedgerHeaderHistoryEntryExt.encode(
                stream,
                encodedLedgerHeaderHistoryEntry.ext
            )
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): LedgerHeaderHistoryEntry {
            val decodedLedgerHeaderHistoryEntry =
                LedgerHeaderHistoryEntry()
            decodedLedgerHeaderHistoryEntry.hash = Hash.decode(stream)
            decodedLedgerHeaderHistoryEntry.header = LedgerHeader.decode(stream)
            decodedLedgerHeaderHistoryEntry.ext =
                LedgerHeaderHistoryEntryExt.decode(stream)
            return decodedLedgerHeaderHistoryEntry
        }
    }
}
