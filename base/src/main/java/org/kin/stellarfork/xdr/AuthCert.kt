// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct AuthCert
//  {
//      Curve25519Public pubkey;
//      uint64 expiration;
//      Signature sig;
//  };
//  ===========================================================================
class AuthCert {
    var pubkey: Curve25519Public? = null
    var expiration: Uint64? = null
    var sig: Signature? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, encodedAuthCert: AuthCert) {
            Curve25519Public.encode(stream, encodedAuthCert.pubkey!!)
            Uint64.encode(stream, encodedAuthCert.expiration!!)
            Signature.encode(stream, encodedAuthCert.sig!!)
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): AuthCert {
            val decodedAuthCert = AuthCert()
            decodedAuthCert.pubkey = Curve25519Public.decode(stream)
            decodedAuthCert.expiration = Uint64.decode(stream)
            decodedAuthCert.sig = Signature.decode(stream)
            return decodedAuthCert
        }
    }
}
