// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  union SignerKey switch (SignerKeyType type)
//  {
//  case SIGNER_KEY_TYPE_ED25519:
//      uint256 ed25519;
//  case SIGNER_KEY_TYPE_PRE_AUTH_TX:
//      /* Hash of Transaction structure */
//      uint256 preAuthTx;
//  case SIGNER_KEY_TYPE_HASH_X:
//      /* Hash of random 256 bit preimage X */
//      uint256 hashX;
//  };
//  ===========================================================================
class SignerKey {
    var discriminant: SignerKeyType? = null
    var ed25519: Uint256? = null
    var preAuthTx: Uint256? = null
    var hashX: Uint256? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, encodedSignerKey: SignerKey) {
            stream.writeInt(encodedSignerKey.discriminant!!.value)
            when (encodedSignerKey.discriminant) {
                SignerKeyType.SIGNER_KEY_TYPE_ED25519 -> Uint256.encode(
                    stream,
                    encodedSignerKey.ed25519!!
                )
                SignerKeyType.SIGNER_KEY_TYPE_PRE_AUTH_TX -> Uint256.encode(
                    stream,
                    encodedSignerKey.preAuthTx!!
                )
                SignerKeyType.SIGNER_KEY_TYPE_HASH_X -> Uint256.encode(
                    stream,
                    encodedSignerKey.hashX!!
                )
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): SignerKey {
            val decodedSignerKey = SignerKey()
            val discriminant = SignerKeyType.decode(stream)
            decodedSignerKey.discriminant = discriminant
            when (decodedSignerKey.discriminant) {
                SignerKeyType.SIGNER_KEY_TYPE_ED25519 -> decodedSignerKey.ed25519 =
                    Uint256.decode(stream)
                SignerKeyType.SIGNER_KEY_TYPE_PRE_AUTH_TX -> decodedSignerKey.preAuthTx =
                    Uint256.decode(stream)
                SignerKeyType.SIGNER_KEY_TYPE_HASH_X -> decodedSignerKey.hashX =
                    Uint256.decode(stream)
            }
            return decodedSignerKey
        }
    }
}
