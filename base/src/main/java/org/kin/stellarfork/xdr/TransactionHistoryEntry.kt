// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct TransactionHistoryEntry
//  {
//      uint32 ledgerSeq;
//      TransactionSet txSet;
//
//      // reserved for future use
//      union switch (int v)
//      {
//      case 0:
//          void;
//      }
//      ext;
//  };
//  ===========================================================================
class TransactionHistoryEntry {
    var ledgerSeq: Uint32? = null
    var txSet: TransactionSet? = null
    var ext: TransactionHistoryEntryExt? = null

    class TransactionHistoryEntryExt {
        var discriminant: Int? = null

        companion object {
            @JvmStatic
            @Throws(IOException::class)
            fun encode(
                stream: XdrDataOutputStream,
                encodedTransactionHistoryEntryExt: TransactionHistoryEntryExt
            ) {
                stream.writeInt(encodedTransactionHistoryEntryExt.discriminant!!.toInt())
                when (encodedTransactionHistoryEntryExt.discriminant) {
                    0 -> {
                    }
                }
            }

            @JvmStatic
            @Throws(IOException::class)
            fun decode(stream: XdrDataInputStream): TransactionHistoryEntryExt {
                val decodedTransactionHistoryEntryExt = TransactionHistoryEntryExt()
                val discriminant = stream.readInt()
                decodedTransactionHistoryEntryExt.discriminant = discriminant
                when (decodedTransactionHistoryEntryExt.discriminant) {
                    0 -> {
                    }
                }
                return decodedTransactionHistoryEntryExt
            }
        }
    }

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedTransactionHistoryEntry: TransactionHistoryEntry
        ) {
            Uint32.encode(stream, encodedTransactionHistoryEntry.ledgerSeq!!)
            TransactionSet.encode(stream, encodedTransactionHistoryEntry.txSet!!)
            TransactionHistoryEntryExt.encode(stream, encodedTransactionHistoryEntry.ext!!)
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): TransactionHistoryEntry {
            val decodedTransactionHistoryEntry = TransactionHistoryEntry()
            decodedTransactionHistoryEntry.ledgerSeq = Uint32.decode(stream)
            decodedTransactionHistoryEntry.txSet = TransactionSet.decode(stream)
            decodedTransactionHistoryEntry.ext = TransactionHistoryEntryExt.decode(stream)
            return decodedTransactionHistoryEntry
        }
    }
}
