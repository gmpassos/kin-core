// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct TransactionSet
//  {
//      Hash previousLedgerHash;
//      TransactionEnvelope txs<>;
//  };
//  ===========================================================================
class TransactionSet {
    var previousLedgerHash: Hash? = null
    var txs: Array<TransactionEnvelope?> = arrayOfNulls(0)

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedTransactionSet: TransactionSet
        ) {
            Hash.encode(stream, encodedTransactionSet.previousLedgerHash!!)
            val txssize = encodedTransactionSet.txs.size
            stream.writeInt(txssize)
            for (i in 0 until txssize) {
                TransactionEnvelope.encode(stream, encodedTransactionSet.txs[i]!!)
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): TransactionSet {
            val decodedTransactionSet = TransactionSet()
            decodedTransactionSet.previousLedgerHash = Hash.decode(stream)
            val txssize = stream.readInt()
            decodedTransactionSet.txs = arrayOfNulls(txssize)
            for (i in 0 until txssize) {
                decodedTransactionSet.txs[i] = TransactionEnvelope.decode(stream)
            }
            return decodedTransactionSet
        }
    }
}
