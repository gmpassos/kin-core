// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  enum ChangeTrustResultCode
//  {
//      // codes considered as "success" for the operation
//      CHANGE_TRUST_SUCCESS = 0,
//      // codes considered as "failure" for the operation
//      CHANGE_TRUST_MALFORMED = -1,     // bad input
//      CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer
//      CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance
//                                       // cannot create with a limit of 0
//      CHANGE_TRUST_LOW_RESERVE = -4, // not enough funds to create a new trust line,
//      CHANGE_TRUST_SELF_NOT_ALLOWED = -5 // trusting self is not allowed
//  };
//  ===========================================================================
enum class ChangeTrustResultCode(val value: Int) {
    CHANGE_TRUST_SUCCESS(0),
    CHANGE_TRUST_MALFORMED(-1),
    CHANGE_TRUST_NO_ISSUER(-2),
    CHANGE_TRUST_INVALID_LIMIT(-3),
    CHANGE_TRUST_LOW_RESERVE(-4),
    CHANGE_TRUST_SELF_NOT_ALLOWED(-5);

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): ChangeTrustResultCode {
            val value = stream.readInt()
            return when (value) {
                0 -> CHANGE_TRUST_SUCCESS
                -1 -> CHANGE_TRUST_MALFORMED
                -2 -> CHANGE_TRUST_NO_ISSUER
                -3 -> CHANGE_TRUST_INVALID_LIMIT
                -4 -> CHANGE_TRUST_LOW_RESERVE
                -5 -> CHANGE_TRUST_SELF_NOT_ALLOWED
                else -> throw RuntimeException("Unknown enum value: $value")
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, value: ChangeTrustResultCode) {
            stream.writeInt(value.value)
        }
    }

}
