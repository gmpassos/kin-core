// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import org.kin.stellarfork.xdr.DataValue.Companion.encode
import java.io.IOException

// === xdr source ============================================================
//  struct ManageDataOp
//  {
//      string64 dataName;
//      DataValue* dataValue;   // set to null to clear
//  };
//  ===========================================================================
class ManageDataOp {
    var dataName: String64? = null
    var dataValue: DataValue? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(stream: XdrDataOutputStream, encodedManageDataOp: ManageDataOp) {
            String64.encode(stream, encodedManageDataOp.dataName!!)
            if (encodedManageDataOp.dataValue != null) {
                stream.writeInt(1)
                encode(stream, encodedManageDataOp.dataValue!!)
            } else {
                stream.writeInt(0)
            }
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): ManageDataOp {
            val decodedManageDataOp = ManageDataOp()
            decodedManageDataOp.dataName = String64.decode(stream)
            val dataValuePresent = stream.readInt()
            if (dataValuePresent != 0) {
                decodedManageDataOp.dataValue = DataValue.decode(stream)
            }
            return decodedManageDataOp
        }
    }
}
