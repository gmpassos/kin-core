// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten
package org.kin.stellarfork.xdr

import java.io.IOException

// === xdr source ============================================================
//  struct InflationPayout // or use PaymentResultAtom to limit types?
//  {
//      AccountID destination;
//      int64 amount;
//  };
//  ===========================================================================
class InflationPayout {
    var destination: AccountID? = null
    var amount: Int64? = null

    companion object {
        @JvmStatic
        @Throws(IOException::class)
        fun encode(
            stream: XdrDataOutputStream,
            encodedInflationPayout: InflationPayout
        ) {
            AccountID.encode(stream, encodedInflationPayout.destination!!)
            Int64.encode(stream, encodedInflationPayout.amount!!)
        }

        @JvmStatic
        @Throws(IOException::class)
        fun decode(stream: XdrDataInputStream): InflationPayout {
            val decodedInflationPayout = InflationPayout()
            decodedInflationPayout.destination = AccountID.decode(stream)
            decodedInflationPayout.amount = Int64.decode(stream)
            return decodedInflationPayout
        }
    }
}
